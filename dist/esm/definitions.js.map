{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AA0fA;;GAEG;AACH,MAAM,CAAN,IAAY,aA+EX;AA/ED,WAAY,aAAa;IACvB;;;;OAIG;IACH,gCAAe,CAAA;IACf;;;;OAIG;IACH,oCAAmB,CAAA;IACnB;;;;OAIG;IACH,mCAAkB,CAAA;IAClB;;;;OAIG;IACH,mCAAkB,CAAA;IAClB;;;;OAIG;IACH,qCAAoB,CAAA;IACpB;;;;OAIG;IACH,2CAA0B,CAAA;IAC1B;;;;OAIG;IACH,+BAAc,CAAA;IACd;;;;OAIG;IACH,iCAAgB,CAAA;IAChB;;;;OAIG;IACH,4BAAW,CAAA;IACX;;;;OAIG;IACH,mCAAkB,CAAA;IAClB;;;;OAIG;IACH,mCAAkB,CAAA;IAClB;;;;OAIG;IACH,+BAAc,CAAA;IACd;;;;OAIG;IACH,+BAAc,CAAA;AAChB,CAAC,EA/EW,aAAa,KAAb,aAAa,QA+ExB;AAED;;GAEG;AACH,MAAM,CAAN,IAAY,gBAqDX;AArDD,WAAY,gBAAgB;IAC1B;;OAEG;IACH,oDAAgC,CAAA;IAChC;;OAEG;IACH,gDAA4B,CAAA;IAC5B;;OAEG;IACH,sDAAkC,CAAA;IAClC;;OAEG;IACH,mCAAe,CAAA;IACf;;OAEG;IACH,+BAAW,CAAA;IACX;;OAEG;IACH,iCAAa,CAAA;IACb;;OAEG;IACH,mCAAe,CAAA;IACf;;OAEG;IACH,uCAAmB,CAAA;IACnB;;OAEG;IACH,+BAAW,CAAA;IACX;;OAEG;IACH,iCAAa,CAAA;IACb;;OAEG;IACH,+BAAW,CAAA;IACX;;OAEG;IACH,iCAAa,CAAA;IACb;;OAEG;IACH,uCAAmB,CAAA;AACrB,CAAC,EArDW,gBAAgB,KAAhB,gBAAgB,QAqD3B;AAED;;GAEG;AACH,MAAM,CAAN,IAAY,UASX;AATD,WAAY,UAAU;IACpB;;OAEG;IACH,6BAAe,CAAA;IACf;;OAEG;IACH,2BAAa,CAAA;AACf,CAAC,EATW,UAAU,KAAV,UAAU,QASrB;AAED;;GAEG;AACH,MAAM,CAAN,IAAY,sCAiCX;AAjCD,WAAY,sCAAsC;IAChD;;OAEG;IACH,yGAAW,CAAA;IACX;;OAEG;IACH,yGAAW,CAAA;IACX;;OAEG;IACH,iHAAe,CAAA;IACf;;OAEG;IACH,2GAAY,CAAA;IACZ;;OAEG;IACH,6GAAa,CAAA;IACb;;OAEG;IACH,uGAAU,CAAA;IACV;;OAEG;IACH,+GAAc,CAAA;IACd;;OAEG;IACH,yHAAmB,CAAA;AACrB,CAAC,EAjCW,sCAAsC,KAAtC,sCAAsC,QAiCjD","sourcesContent":["import type { PermissionState, PluginListenerHandle } from '@capacitor/core';\r\n\r\nexport interface BarcodeScannerPlugin {\r\n  /**\r\n   * Start scanning for barcodes.\r\n   *\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  startScan(options?: StartScanOptions): Promise<void>;\r\n  /**\r\n   * Stop scanning for barcodes.\r\n   *\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  stopScan(): Promise<void>;\r\n  /**\r\n   * Read barcodes from an image.\r\n   *\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  readBarcodesFromImage(\r\n    options: ReadBarcodesFromImageOptions,\r\n  ): Promise<ReadBarcodesFromImageResult>;\r\n  /**\r\n   * Scan a barcode with a ready-to-use interface without WebView customization.\r\n   *\r\n   * On **Android**, this method is only available on devices with Google Play Services\r\n   * installed. Therefore, no camera permission is required.\r\n   *\r\n   * **Attention:** Before using this method on *Android*, first check if the Google Barcode Scanner module is available\r\n   * by using `isGoogleBarcodeScannerModuleAvailable()`.\r\n   *\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   * @experimental This method is experimental and may change in the future.\r\n   */\r\n  scan(options?: ScanOptions): Promise<ScanResult>;\r\n  /**\r\n   * Returns whether or not the barcode scanner is supported.\r\n   *\r\n   * Available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  isSupported(): Promise<IsSupportedResult>;\r\n  /**\r\n   * Enable camera's torch (flash) during a scan session.\r\n   *\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   * @deprecated Use the [Capacitor Torch](https://capawesome.io/plugins/torch/) plugin instead.\r\n   */\r\n  enableTorch(): Promise<void>;\r\n  /**\r\n   * Disable camera's torch (flash) during a scan session.\r\n   *\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   * @deprecated Use the [Capacitor Torch](https://capawesome.io/plugins/torch/) plugin instead.\r\n   */\r\n  disableTorch(): Promise<void>;\r\n  /**\r\n   * Toggle camera's torch (flash) during a scan session.\r\n   *\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   * @deprecated Use the [Capacitor Torch](https://capawesome.io/plugins/torch/) plugin instead.\r\n   */\r\n  toggleTorch(): Promise<void>;\r\n  /**\r\n   * Returns whether or not the camera's torch (flash) is enabled.\r\n   *\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   * @deprecated Use the [Capacitor Torch](https://capawesome.io/plugins/torch/) plugin instead.\r\n   */\r\n  isTorchEnabled(): Promise<IsTorchEnabledResult>;\r\n  /**\r\n   * Returns whether or not the camera's torch (flash) is available.\r\n   *\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   * @deprecated Use the [Capacitor Torch](https://capawesome.io/plugins/torch/) plugin instead.\r\n   */\r\n  isTorchAvailable(): Promise<IsTorchAvailableResult>;\r\n  /**\r\n   * Set the zoom ratio of the camera.\r\n   *\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 5.4.0\r\n   */\r\n  setZoomRatio(options: SetZoomRatioOptions): Promise<void>;\r\n  /**\r\n   * Get the zoom ratio of the camera.\r\n   *\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 5.4.0\r\n   */\r\n  getZoomRatio(): Promise<GetZoomRatioResult>;\r\n  /**\r\n   * Get the minimum zoom ratio of the camera.\r\n   *\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 5.4.0\r\n   */\r\n  getMinZoomRatio(): Promise<GetMinZoomRatioResult>;\r\n  /**\r\n   * Get the maximum zoom ratio of the camera.\r\n   *\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 5.4.0\r\n   */\r\n  getMaxZoomRatio(): Promise<GetMaxZoomRatioResult>;\r\n  /**\r\n   * Open the settings of the app so that the user can grant the camera permission.\r\n   *\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  openSettings(): Promise<void>;\r\n  /**\r\n   * Check if the Google Barcode Scanner module is available.\r\n   *\r\n   * If the Google Barcode Scanner module is not available, you can install it by using `installGoogleBarcodeScannerModule()`.\r\n   *\r\n   * Only available on Android.\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  isGoogleBarcodeScannerModuleAvailable(): Promise<IsGoogleBarcodeScannerModuleAvailableResult>;\r\n  /**\r\n   * Install the Google Barcode Scanner module.\r\n   *\r\n   * **Attention**: This only starts the installation.\r\n   * The `googleBarcodeScannerModuleInstallProgress` event listener will\r\n   * notify you when the installation is complete.\r\n   *\r\n   * Only available on Android.\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  installGoogleBarcodeScannerModule(): Promise<void>;\r\n  /**\r\n   * Check camera permission.\r\n   *\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  checkPermissions(): Promise<PermissionStatus>;\r\n  /**\r\n   * Request camera permission.\r\n   *\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  requestPermissions(): Promise<PermissionStatus>;\r\n  /**\r\n   * Called when a barcode is scanned.\r\n   *\r\n   * Available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  addListener(\r\n    eventName: 'barcodeScanned',\r\n    listenerFunc: (event: BarcodeScannedEvent) => void,\r\n  ): Promise<PluginListenerHandle>;\r\n  /**\r\n   * Called when an error occurs during the scan.\r\n   *\r\n   * Available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  addListener(\r\n    eventName: 'scanError',\r\n    listenerFunc: (event: ScanErrorEvent) => void,\r\n  ): Promise<PluginListenerHandle>;\r\n  /**\r\n   * Called when the Google Barcode Scanner module is installed.\r\n   *\r\n   * Available on Android.\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  addListener(\r\n    eventName: 'googleBarcodeScannerModuleInstallProgress',\r\n    listenerFunc: (\r\n      event: GoogleBarcodeScannerModuleInstallProgressEvent,\r\n    ) => void,\r\n  ): Promise<PluginListenerHandle>;\r\n  /**\r\n   * Remove all listeners for this plugin.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  removeAllListeners(): Promise<void>;\r\n}\r\n\r\n/**\r\n * @since 0.0.1\r\n */\r\nexport interface StartScanOptions {\r\n  /**\r\n   * Improve the speed of the barcode scanner by configuring\r\n   * the barcode formats to scan for.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  formats?: BarcodeFormat[];\r\n  /**\r\n   * Configure the camera (front or back) to use.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  lensFacing?: LensFacing;\r\n}\r\n\r\n/**\r\n * @since 0.0.1\r\n */\r\nexport interface ReadBarcodesFromImageOptions {\r\n  /**\r\n   * Improve the speed of the barcode scanner by configuring\r\n   * the barcode formats to scan for.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  formats?: BarcodeFormat[];\r\n  /**\r\n   * The local path to the image file.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  path: string;\r\n}\r\n\r\n/**\r\n * @since 0.0.1\r\n */\r\nexport interface ReadBarcodesFromImageResult {\r\n  /**\r\n   * The detected barcodes.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  barcodes: Barcode[];\r\n}\r\n\r\n/**\r\n * @since 0.0.1\r\n */\r\nexport interface ScanOptions {\r\n  /**\r\n   * Improve the speed of the barcode scanner by configuring\r\n   * the barcode formats to scan for.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  formats?: BarcodeFormat[];\r\n}\r\n\r\n/**\r\n * @since 0.0.1\r\n */\r\nexport interface ScanResult {\r\n  /**\r\n   * The detected barcodes.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  barcodes: Barcode[];\r\n}\r\n\r\n/**\r\n * @since 0.0.1\r\n */\r\nexport interface IsSupportedResult {\r\n  /**\r\n   * Whether or not the barcode scanner is supported by checking if the device has a camera.\r\n   *\r\n   * @since 0.0.1\r\n   * @example true\r\n   */\r\n  supported: boolean;\r\n}\r\n\r\n/**\r\n * @since 0.0.1\r\n */\r\nexport interface IsTorchEnabledResult {\r\n  /**\r\n   * Whether or not the torch is enabled.\r\n   *\r\n   * @since 0.0.1\r\n   * @example true\r\n   */\r\n  enabled: boolean;\r\n}\r\n\r\n/**\r\n * @since 0.0.1\r\n */\r\nexport interface IsTorchAvailableResult {\r\n  /**\r\n   * Whether or not the torch is available.\r\n   *\r\n   * @since 0.0.1\r\n   * @example true\r\n   */\r\n  available: boolean;\r\n}\r\n\r\n/**\r\n * @since 5.4.0\r\n */\r\nexport interface SetZoomRatioOptions {\r\n  /**\r\n   * The zoom ratio to set.\r\n   *\r\n   * @since 5.4.0\r\n   */\r\n  zoomRatio: number;\r\n}\r\n\r\n/**\r\n * @since 5.4.0\r\n */\r\nexport interface GetZoomRatioResult {\r\n  /**\r\n   * The zoom ratio.\r\n   *\r\n   * @since 5.4.0\r\n   */\r\n  zoomRatio: number;\r\n}\r\n\r\n/**\r\n * @since 5.4.0\r\n */\r\nexport interface GetMinZoomRatioResult {\r\n  /**\r\n   * The minimum zoom ratio.\r\n   *\r\n   * @since 5.4.0\r\n   */\r\n  zoomRatio: number;\r\n}\r\n\r\n/**\r\n * @since 5.4.0\r\n */\r\nexport interface GetMaxZoomRatioResult {\r\n  /**\r\n   * The maximum zoom ratio.\r\n   *\r\n   * @since 5.4.0\r\n   */\r\n  zoomRatio: number;\r\n}\r\n\r\n/**\r\n * @since 5.1.0\r\n */\r\nexport interface IsGoogleBarcodeScannerModuleAvailableResult {\r\n  /**\r\n   * Whether or not the Google Barcode Scanner module is available.\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  available: boolean;\r\n}\r\n\r\n/**\r\n * @since 0.0.1\r\n */\r\nexport type CameraPermissionState = PermissionState | 'limited';\r\n\r\n/**\r\n * @since 0.0.1\r\n */\r\nexport interface PermissionStatus {\r\n  /**\r\n   * @since 0.0.1\r\n   */\r\n  camera: CameraPermissionState;\r\n}\r\n\r\n/**\r\n * @since 0.0.1\r\n */\r\nexport interface BarcodeScannedEvent {\r\n  /**\r\n   * A detected barcode.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  barcode: Barcode;\r\n}\r\n\r\n/**\r\n * @since 0.0.1\r\n */\r\nexport interface ScanErrorEvent {\r\n  /**\r\n   * The error message.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  message: string;\r\n}\r\n\r\n/**\r\n * @since 5.1.0\r\n */\r\nexport interface GoogleBarcodeScannerModuleInstallProgressEvent {\r\n  /**\r\n   * The current state of the installation.\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  state: GoogleBarcodeScannerModuleInstallState;\r\n  /**\r\n   * The progress of the installation in percent between 0 and 100.\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  progress?: number;\r\n}\r\n\r\n/**\r\n * @since 0.0.1\r\n */\r\nexport interface Barcode {\r\n  /**\r\n   * Raw bytes as it was encoded in the barcode.\r\n   *\r\n   * @since 0.0.1\r\n   * @example [67, 97, 112, 97, 99, 105, 116, 111, 114, 74, 83]\r\n   */\r\n  bytes?: number[];\r\n  /**\r\n   * The four corner points of the barcode in clockwise\r\n   * order starting with top-left.\r\n   *\r\n   * This property is currently only supported by the `startScan(...)` method.\r\n   *\r\n   * @since 0.0.1\r\n   * @example [[34, 33], [264, 32], [263, 263], [33, 263]]\r\n   * @experimental This property is experimental and may change in the future.\r\n   */\r\n  cornerPoints?: [\r\n    [number, number],\r\n    [number, number],\r\n    [number, number],\r\n    [number, number],\r\n  ];\r\n  /**\r\n   * The barcode value in a human readable format.\r\n   *\r\n   * @since 0.0.1\r\n   * @example \"CapacitorJS\"\r\n   */\r\n  displayValue: string;\r\n  /**\r\n   * The barcode format.\r\n   *\r\n   * @since 0.0.1\r\n   * @example \"QR_CODE\"\r\n   */\r\n  format: BarcodeFormat;\r\n  /**\r\n   * The barcode value in a machine readable format.\r\n   *\r\n   * @since 0.0.1\r\n   * @example \"CapacitorJS\"\r\n   */\r\n  rawValue: string;\r\n  /**\r\n   * The barcode value type.\r\n   *\r\n   * @since 0.0.1\r\n   * @example \"TEXT\"\r\n   */\r\n  valueType: BarcodeValueType;\r\n}\r\n\r\n/**\r\n * @since 0.0.1\r\n */\r\nexport enum BarcodeFormat {\r\n  /**\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  Aztec = 'AZTEC',\r\n  /**\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  Codabar = 'CODABAR',\r\n  /**\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  Code39 = 'CODE_39',\r\n  /**\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  Code93 = 'CODE_93',\r\n  /**\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  Code128 = 'CODE_128',\r\n  /**\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  DataMatrix = 'DATA_MATRIX',\r\n  /**\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  Ean8 = 'EAN_8',\r\n  /**\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  Ean13 = 'EAN_13',\r\n  /**\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  Itf = 'ITF',\r\n  /**\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  Pdf417 = 'PDF_417',\r\n  /**\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  QrCode = 'QR_CODE',\r\n  /**\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  UpcA = 'UPC_A',\r\n  /**\r\n   * Only available on Android and iOS.\r\n   *\r\n   * @since 0.0.1\r\n   */\r\n  UpcE = 'UPC_E',\r\n}\r\n\r\n/**\r\n * @since 0.0.1\r\n */\r\nexport enum BarcodeValueType {\r\n  /**\r\n   * @since 0.0.1\r\n   */\r\n  CalendarEvent = 'CALENDAR_EVENT',\r\n  /**\r\n   * @since 0.0.1\r\n   */\r\n  ContactInfo = 'CONTACT_INFO',\r\n  /**\r\n   * @since 0.0.1\r\n   */\r\n  DriversLicense = 'DRIVERS_LICENSE',\r\n  /**\r\n   * @since 0.0.1\r\n   */\r\n  Email = 'EMAIL',\r\n  /**\r\n   * @since 0.0.1\r\n   */\r\n  Geo = 'GEO',\r\n  /**\r\n   * @since 0.0.1\r\n   */\r\n  Isbn = 'ISBN',\r\n  /**\r\n   * @since 0.0.1\r\n   */\r\n  Phone = 'PHONE',\r\n  /**\r\n   * @since 0.0.1\r\n   */\r\n  Product = 'PRODUCT',\r\n  /**\r\n   * @since 0.0.1\r\n   */\r\n  Sms = 'SMS',\r\n  /**\r\n   * @since 0.0.1\r\n   */\r\n  Text = 'TEXT',\r\n  /**\r\n   * @since 0.0.1\r\n   */\r\n  Url = 'URL',\r\n  /**\r\n   * @since 0.0.1\r\n   */\r\n  Wifi = 'WIFI',\r\n  /**\r\n   * @since 0.0.1\r\n   */\r\n  Unknown = 'UNKNOWN',\r\n}\r\n\r\n/**\r\n * @since 0.0.1\r\n */\r\nexport enum LensFacing {\r\n  /**\r\n   * @since 0.0.1\r\n   */\r\n  Front = 'FRONT',\r\n  /**\r\n   * @since 0.0.1\r\n   */\r\n  Back = 'BACK',\r\n}\r\n\r\n/**\r\n * @since 5.1.0\r\n */\r\nexport enum GoogleBarcodeScannerModuleInstallState {\r\n  /**\r\n   * @since 5.1.0\r\n   */\r\n  UNKNOWN = 0,\r\n  /**\r\n   * @since 5.1.0\r\n   */\r\n  PENDING = 1,\r\n  /**\r\n   * @since 5.1.0\r\n   */\r\n  DOWNLOADING = 2,\r\n  /**\r\n   * @since 5.1.0\r\n   */\r\n  CANCELED = 3,\r\n  /**\r\n   * @since 5.1.0\r\n   */\r\n  COMPLETED = 4,\r\n  /**\r\n   * @since 5.1.0\r\n   */\r\n  FAILED = 5,\r\n  /**\r\n   * @since 5.1.0\r\n   */\r\n  INSTALLING = 6,\r\n  /**\r\n   * @since 5.1.0\r\n   */\r\n  DOWNLOAD_PAUSED = 7,\r\n}\r\n"]}