{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAmB/E,MAAM,OAAO,iBACX,SAAQ,SAAS;IAGjB,KAAK,CAAC,SAAS,CAAC,QAA2B;QACzC,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,QAAQ;QACZ,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,qBAAqB,CACzB,QAAsC;QAEtC,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,IAAI;QACR,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,WAAW;QACf,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,WAAW;QACf,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,YAAY;QAChB,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,WAAW;QACf,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,cAAc;QAClB,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,gBAAgB;QACpB,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,QAA6B;QAC9C,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,YAAY;QAChB,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,eAAe;QACnB,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,eAAe;QACnB,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,YAAY;QAChB,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,qCAAqC;QACzC,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,iCAAiC;QACrC,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,gBAAgB;QACpB,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,kBAAkB;QACtB,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC1C,CAAC;IAEO,0BAA0B;QAChC,OAAO,IAAI,kBAAkB,CAC3B,uEAAuE,EACvE,aAAa,CAAC,WAAW,CAC1B,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { CapacitorException, ExceptionCode, WebPlugin } from '@capacitor/core';\r\n\r\nimport type {\r\n  BarcodeScannerPlugin,\r\n  GetMaxZoomRatioResult,\r\n  GetMinZoomRatioResult,\r\n  GetZoomRatioResult,\r\n  IsGoogleBarcodeScannerModuleAvailableResult,\r\n  IsSupportedResult,\r\n  IsTorchAvailableResult,\r\n  IsTorchEnabledResult,\r\n  PermissionStatus,\r\n  ReadBarcodesFromImageOptions,\r\n  ReadBarcodesFromImageResult,\r\n  ScanResult,\r\n  SetZoomRatioOptions,\r\n  StartScanOptions,\r\n} from './definitions';\r\n\r\nexport class BarcodeScannerWeb\r\n  extends WebPlugin\r\n  implements BarcodeScannerPlugin\r\n{\r\n  async startScan(_options?: StartScanOptions): Promise<void> {\r\n    throw this.createUnavailableException();\r\n  }\r\n\r\n  async stopScan(): Promise<void> {\r\n    throw this.createUnavailableException();\r\n  }\r\n\r\n  async readBarcodesFromImage(\r\n    _options: ReadBarcodesFromImageOptions,\r\n  ): Promise<ReadBarcodesFromImageResult> {\r\n    throw this.createUnavailableException();\r\n  }\r\n\r\n  async scan(): Promise<ScanResult> {\r\n    throw this.createUnavailableException();\r\n  }\r\n\r\n  async isSupported(): Promise<IsSupportedResult> {\r\n    throw this.createUnavailableException();\r\n  }\r\n\r\n  async enableTorch(): Promise<void> {\r\n    throw this.createUnavailableException();\r\n  }\r\n\r\n  async disableTorch(): Promise<void> {\r\n    throw this.createUnavailableException();\r\n  }\r\n\r\n  async toggleTorch(): Promise<void> {\r\n    throw this.createUnavailableException();\r\n  }\r\n\r\n  async isTorchEnabled(): Promise<IsTorchEnabledResult> {\r\n    throw this.createUnavailableException();\r\n  }\r\n\r\n  async isTorchAvailable(): Promise<IsTorchAvailableResult> {\r\n    throw this.createUnavailableException();\r\n  }\r\n\r\n  async setZoomRatio(_options: SetZoomRatioOptions): Promise<void> {\r\n    throw this.createUnavailableException();\r\n  }\r\n\r\n  async getZoomRatio(): Promise<GetZoomRatioResult> {\r\n    throw this.createUnavailableException();\r\n  }\r\n\r\n  async getMinZoomRatio(): Promise<GetMinZoomRatioResult> {\r\n    throw this.createUnavailableException();\r\n  }\r\n\r\n  async getMaxZoomRatio(): Promise<GetMaxZoomRatioResult> {\r\n    throw this.createUnavailableException();\r\n  }\r\n\r\n  async openSettings(): Promise<void> {\r\n    throw this.createUnavailableException();\r\n  }\r\n\r\n  async isGoogleBarcodeScannerModuleAvailable(): Promise<IsGoogleBarcodeScannerModuleAvailableResult> {\r\n    throw this.createUnavailableException();\r\n  }\r\n\r\n  async installGoogleBarcodeScannerModule(): Promise<void> {\r\n    throw this.createUnavailableException();\r\n  }\r\n\r\n  async checkPermissions(): Promise<PermissionStatus> {\r\n    throw this.createUnavailableException();\r\n  }\r\n\r\n  async requestPermissions(): Promise<PermissionStatus> {\r\n    throw this.createUnavailableException();\r\n  }\r\n\r\n  private createUnavailableException(): CapacitorException {\r\n    return new CapacitorException(\r\n      'This Barcode Scanner plugin method is not available on this platform.',\r\n      ExceptionCode.Unavailable,\r\n    );\r\n  }\r\n}\r\n"]}